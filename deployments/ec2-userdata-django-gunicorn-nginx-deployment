#!/bin/bash -ex
exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
echo BEGIN

sudo apt update
sudo apt install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx curl -y
sudo pip3 install virtualenv

mkdir /var/www/html/myapp
cd /var/www/html/myapp

virtualenv env

source env/bin/activate
pip install django
pip install gunicorn
# pip install psycopg2-binary
django-admin startproject myproject /var/www/html/myapp
public_ip=$(curl http://checkip.amazonaws.com)
sed -i "s/ALLOWED_HOSTS = \[\]/ALLOWED_HOSTS = \['$public_ip'\]/g" myproject/settings.py
echo "import os" >> myproject/settings.py
echo "STATIC_ROOT = os.path.join(BASE_DIR, 'static')" >> myproject/settings.py
python manage.py makemigrations
python manage.py migrate
python manage.py collectstatic --noinput
deactivate

sudo bash -c 'cat > /etc/systemd/system/gunicorn.socket <<EOF
[Unit]
Description=gunicorn socket

[Socket]
ListenStream=/run/gunicorn.sock

[Install]
WantedBy=sockets.target
EOF'

sudo bash -c 'sudo cat > /etc/systemd/system/gunicorn.service << EOF
Description=gunicorn daemon
Requires=gunicorn.socket
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/var/www/html/myapp
ExecStart=/var/www/html/myapp/env/bin/gunicorn \
          --access-logfile - \
          --workers 3 \
          --bind unix:/run/gunicorn.sock \
          myproject.wsgi:application

[Install]
WantedBy=multi-user.target
EOF'

sudo systemctl start gunicorn.socket
sudo systemctl enable gunicorn.socket

sudo bash -c 'sudo cat > /etc/nginx/sites-available/myapp.conf << EOF
server {
    listen 80;
    server_name PUBLIC_IP_ADDRESS;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /var/www/html/myapp;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/run/gunicorn.sock;
    }
}
EOF'

sudo sed -i "s/PUBLIC_IP_ADDRESS/$public_ip/g" /etc/nginx/sites-available/myapp.conf

sudo ln -s /etc/nginx/sites-available/myapp.conf /etc/nginx/sites-enabled/

sudo systemctl restart nginx

echo END
